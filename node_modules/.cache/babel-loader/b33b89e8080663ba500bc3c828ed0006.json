{"ast":null,"code":"var _jsxFileName = \"/home/pc/github/my-react-app/src/Component/Pagination/Pagination.js\",\n  _s = $RefreshSig$();\nimport ReactPaginate from \"https://cdn.skypack.dev/react-paginate@7.1.3\";\nimport React, { useEffect, useState } from \"https://cdn.skypack.dev/react@17.0.1\";\nimport ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\n\n// Util for GitHub API.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getGitHubPageCount(response) {\n  const REGEX_GITHUB_HEADER_LINK = /<\\S*\\&page=(\\d)>; rel=\"last\"/gm;\n  // Extract pageCount from Link header.\n  return Number(REGEX_GITHUB_HEADER_LINK.exec(response.headers.get(\"Link\"))[1]);\n}\n\n// Actual React-Paginate example.\n// https://github.com/AdeleD/react-paginate\n\nfunction Repositories(_ref) {\n  let {\n    repositories,\n    className\n  } = _ref;\n  if (repositories.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      role: \"alert\",\n      children: \"No results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n  // TODO Format with https://getbootstrap.com/docs/5.1/components/card/\n  //   https://getbootstrap.com/docs/5.1/components/list-group/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: repositories.map(repository => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repository-entry\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: repository.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = Repositories;\nfunction PaginateDemoApp(_ref2) {\n  _s();\n  let {\n    orgName,\n    perPage\n  } = _ref2;\n  const [repositories, setRepositories] = useState([]);\n  const [pageOffset, setPageOffset] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n  const [apiError, setApiError] = useState(null);\n  useEffect(async () => {\n    const response = await fetch(`https://api.github.com/orgs/${orgName}/repos?${new URLSearchParams({\n      per_page: perPage,\n      page: pageOffset\n    })}`);\n    const responseJson = await response.json();\n    if (!response.ok) {\n      setApiError(responseJson.message);\n      setRepositories([]);\n      setPageCount(0);\n      return;\n    }\n    const newPageCount = getGitHubPageCount(response);\n    console.log(responseJson, newPageCount);\n    setRepositories(responseJson);\n    setPageCount(newPageCount);\n  }, [pageOffset, perPage]);\n  const handlePageChange = event => {\n    console.log(event);\n    // TODO Only change displayed selected page\n    // when its content is loaded in useEffect.\n    setPageOffset(event.selected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"repo-title\",\n      children: [orgName, \" GitHub repositories\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Previous\",\n      nextLabel: \"Next\",\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      nextClassName: \"page-item\",\n      nextLinkClassName: \"page-link\",\n      breakLabel: \"...\",\n      breakClassName: \"page-item\",\n      breakLinkClassName: \"page-link\",\n      pageCount: pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: handlePageChange,\n      containerClassName: \"pagination\",\n      activeClassName: \"active\",\n      forcePage: pageOffset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), apiError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: apiError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      className: \"listing\",\n      repositories: repositories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Previous\",\n      nextLabel: \"Next\",\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      nextClassName: \"page-item\",\n      nextLinkClassName: \"page-link\",\n      breakLabel: \"...\",\n      breakClassName: \"page-item\",\n      breakLinkClassName: \"page-link\",\n      pageCount: pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: handlePageChange,\n      containerClassName: \"pagination\",\n      activeClassName: \"active\",\n      forcePage: pageOffset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(PaginateDemoApp, \"eAKq2ZHwpOfkYqtXjTyJav3M1Io=\");\n_c2 = PaginateDemoApp;\nReactDOM.render( /*#__PURE__*/_jsxDEV(PaginateDemoApp, {\n  orgName: \"YtoTech\",\n  perPage: 5\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 127,\n  columnNumber: 3\n}, this), document.getElementById(\"container\"));\nvar _c, _c2;\n$RefreshReg$(_c, \"Repositories\");\n$RefreshReg$(_c2, \"PaginateDemoApp\");","map":{"version":3,"names":["ReactPaginate","React","useEffect","useState","ReactDOM","getGitHubPageCount","response","REGEX_GITHUB_HEADER_LINK","Number","exec","headers","get","Repositories","repositories","className","length","map","repository","name","PaginateDemoApp","orgName","perPage","setRepositories","pageOffset","setPageOffset","pageCount","setPageCount","apiError","setApiError","fetch","URLSearchParams","per_page","page","responseJson","json","ok","message","newPageCount","console","log","handlePageChange","event","selected","marginTop","render","document","getElementById"],"sources":["/home/pc/github/my-react-app/src/Component/Pagination/Pagination.js"],"sourcesContent":["import ReactPaginate from \"https://cdn.skypack.dev/react-paginate@7.1.3\";\nimport React, {\n  useEffect,\n  useState\n} from \"https://cdn.skypack.dev/react@17.0.1\";\nimport ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\n\n// Util for GitHub API.\n\nfunction getGitHubPageCount(response) {\n  const REGEX_GITHUB_HEADER_LINK = /<\\S*\\&page=(\\d)>; rel=\"last\"/gm;\n  // Extract pageCount from Link header.\n  return Number(REGEX_GITHUB_HEADER_LINK.exec(response.headers.get(\"Link\"))[1]);\n}\n\n// Actual React-Paginate example.\n// https://github.com/AdeleD/react-paginate\n\nfunction Repositories({ repositories, className }) {\n  if (repositories.length === 0) {\n    return (\n      <div className=\"alert alert-warning\" role=\"alert\">\n        No results.\n      </div>\n    );\n  }\n  // TODO Format with https://getbootstrap.com/docs/5.1/components/card/\n  //   https://getbootstrap.com/docs/5.1/components/list-group/\n  return (\n    <div className={className}>\n      {repositories.map((repository) => (\n        <div className=\"repository-entry\">\n          <h4>{repository.name}</h4>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction PaginateDemoApp({ orgName, perPage }) {\n  const [repositories, setRepositories] = useState([]);\n  const [pageOffset, setPageOffset] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n  const [apiError, setApiError] = useState(null);\n\n  useEffect(async () => {\n    const response = await fetch(\n      `https://api.github.com/orgs/${orgName}/repos?${new URLSearchParams({\n        per_page: perPage,\n        page: pageOffset\n      })}`\n    );\n    const responseJson = await response.json();\n    if (!response.ok) {\n      setApiError(responseJson.message);\n      setRepositories([]);\n      setPageCount(0);\n      return;\n    }\n    const newPageCount = getGitHubPageCount(response);\n    console.log(responseJson, newPageCount);\n    setRepositories(responseJson);\n    setPageCount(newPageCount);\n  }, [pageOffset, perPage]);\n\n  const handlePageChange = (event) => {\n    console.log(event);\n    // TODO Only change displayed selected page\n    // when its content is loaded in useEffect.\n    setPageOffset(event.selected);\n  };\n\n  return (\n    <div style={{ marginTop: \"1rem\" }}>\n      <h3 className=\"repo-title\">{orgName} GitHub repositories</h3>\n      <ReactPaginate\n        previousLabel=\"Previous\"\n        nextLabel=\"Next\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={handlePageChange}\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        forcePage={pageOffset}\n      />\n      {apiError && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {apiError}\n        </div>\n      )}\n      <Repositories className=\"listing\" repositories={repositories} />\n      <ReactPaginate\n        previousLabel=\"Previous\"\n        nextLabel=\"Next\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={handlePageChange}\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        forcePage={pageOffset}\n      />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <PaginateDemoApp orgName=\"YtoTech\" perPage={5} />,\n  document.getElementById(\"container\")\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}